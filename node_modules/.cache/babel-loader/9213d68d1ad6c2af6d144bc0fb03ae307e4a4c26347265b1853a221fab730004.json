{"ast":null,"code":"var _jsxFileName = \"/home/zeref/Projects/Blockchain stuff/Dappcord/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { io } from \"socket.io-client\";\n\n// Components\nimport Navigation from './components/Navigation';\nimport Servers from './components/Servers';\nimport Channels from './components/Channels';\nimport Messages from './components/Messages';\n\n// ABIs\nimport Dappcord from './abis/Dappcord.json';\n\n// Config\nimport config from './config.json';\n\n// Socket\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('ws://localhost:3030');\nfunction App() {\n  _s();\n  const [channels, setChannels] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [dappcord, setDappcord] = useState(null);\n  const loadBlockchainData = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(provider);\n    const network = await provider.getNetwork();\n    const dappcord = new ethers.Contract(config[network.chainId].Dappcord.address, Dappcord, provider);\n    console.log('after dappcord initialization');\n    setDappcord(dappcord);\n    const totalChannels = await dappcord.totalChannels();\n    const channels = [];\n    for (var i = 1; i <= totalChannels; i++) {\n      const channel = await dappcord.getChannel(i);\n      channels.push(channel);\n    }\n    window.ethereum.on('accountChange', async () => {\n      window.location.reload();\n    });\n    setChannels(channels);\n    console.log(channels);\n  };\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      account: account,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Servers, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Channels, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"a9ZGXwGiBkditJg1oyEIqR/Ujkc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","io","Navigation","Servers","Channels","Messages","Dappcord","config","socket","App","channels","setChannels","account","setAccount","provider","setProvider","dappcord","setDappcord","loadBlockchainData","providers","Web3Provider","window","ethereum","network","getNetwork","Contract","chainId","address","console","log","totalChannels","i","channel","getChannel","push","on","location","reload"],"sources":["/home/zeref/Projects/Blockchain stuff/Dappcord/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\nimport { io } from \"socket.io-client\"\n\n// Components\nimport Navigation from './components/Navigation'\nimport Servers from './components/Servers'\nimport Channels from './components/Channels'\nimport Messages from './components/Messages'\n\n// ABIs\nimport Dappcord from './abis/Dappcord.json'\n\n// Config\nimport config from './config.json';\n\n// Socket\nconst socket = io('ws://localhost:3030');\n\nfunction App() {\n  const [channels, setChannels] = useState(null)\n\n  const [account, setAccount] = useState(null)\n  const [provider, setProvider] = useState(null)\n  const [dappcord, setDappcord] = useState(null)\n  const loadBlockchainData = async () => \n  {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    \n    setProvider(provider)\n    \n\n    const network = await provider.getNetwork()\n    const dappcord = new ethers.Contract(config[network.chainId].Dappcord.address, Dappcord, provider)\n    console.log('after dappcord initialization')\n    \n    \n    setDappcord(dappcord)\n    \n    const totalChannels = await dappcord.totalChannels();\n    const channels=  []    \n\n    for (var i = 1; i <= totalChannels; i++){\n      const channel = await dappcord.getChannel(i)\n      channels.push(channel)\n    }\n\n    window.ethereum.on('accountChange', async () => {\n      window.location.reload()\n    })\n    setChannels(channels);\n    console.log(channels)\n  }\n  useEffect(() => {\n    loadBlockchainData()\n  }, [])  \n  return (\n    <div>\n      <Navigation account={account} setAccount={setAccount}/>\n      <main>\n        <Servers/>\n        <Channels/>\n        <Messages/>\n\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,EAAE,QAAQ,kBAAkB;;AAErC;AACA,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;;AAE5C;AACA,OAAOC,QAAQ,MAAM,sBAAsB;;AAE3C;AACA,OAAOC,MAAM,MAAM,eAAe;;AAElC;AAAA;AACA,MAAMC,MAAM,GAAGP,EAAE,CAAC,qBAAqB,CAAC;AAExC,SAASQ,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMmB,kBAAkB,GAAG,YAC3B;IACE,MAAMJ,QAAQ,GAAG,IAAId,MAAM,CAACmB,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;IAEnEP,WAAW,CAACD,QAAQ,CAAC;IAGrB,MAAMS,OAAO,GAAG,MAAMT,QAAQ,CAACU,UAAU,EAAE;IAC3C,MAAMR,QAAQ,GAAG,IAAIhB,MAAM,CAACyB,QAAQ,CAAClB,MAAM,CAACgB,OAAO,CAACG,OAAO,CAAC,CAACpB,QAAQ,CAACqB,OAAO,EAAErB,QAAQ,EAAEQ,QAAQ,CAAC;IAClGc,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAG5CZ,WAAW,CAACD,QAAQ,CAAC;IAErB,MAAMc,aAAa,GAAG,MAAMd,QAAQ,CAACc,aAAa,EAAE;IACpD,MAAMpB,QAAQ,GAAG,EAAE;IAEnB,KAAK,IAAIqB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAID,aAAa,EAAEC,CAAC,EAAE,EAAC;MACtC,MAAMC,OAAO,GAAG,MAAMhB,QAAQ,CAACiB,UAAU,CAACF,CAAC,CAAC;MAC5CrB,QAAQ,CAACwB,IAAI,CAACF,OAAO,CAAC;IACxB;IAEAX,MAAM,CAACC,QAAQ,CAACa,EAAE,CAAC,eAAe,EAAE,YAAY;MAC9Cd,MAAM,CAACe,QAAQ,CAACC,MAAM,EAAE;IAC1B,CAAC,CAAC;IACF1B,WAAW,CAACD,QAAQ,CAAC;IACrBkB,OAAO,CAACC,GAAG,CAACnB,QAAQ,CAAC;EACvB,CAAC;EACDZ,SAAS,CAAC,MAAM;IACdoB,kBAAkB,EAAE;EACtB,CAAC,EAAE,EAAE,CAAC;EACN,oBACE;IAAA,wBACE,QAAC,UAAU;MAAC,OAAO,EAAEN,OAAQ;MAAC,UAAU,EAAEC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE,eACvD;MAAA,wBACE,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAE,eACV,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAE,eACX,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAEN;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GAhDQJ,GAAG;AAAA,KAAHA,GAAG;AAkDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}